version: 2

jobs:
  build:
    docker:
      - image: ghcr.io/h3poteto/yadockeri-base:202010031549
        environment:
          GO111MODULE: "on"
          POSTGRES_HOST: localhost
          POSTGRES_USER: master
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: yadockeri
          ECHO_ENV: test
      - image: postgres:11.4-alpine
        environment:
          POSTGRES_USER: master
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: yadockeri
    working_directory: /go/src/github.com/h3poteto/yadockeri

    steps:
      - checkout
      - restore_cache: &restore-glide-cache
          keys:
            - vendor-{{ arch }}-golang1.15.2-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
            - vendor-{{ arch }}-golang1.15.2-{{ checksum "go.mod" }}
      - run: &install-glide-dependencies
          name: Install dependencies
          command: |
            go mod download
      - save_cache: &save-glide-cache
          key: vendor-{{ arch }}-golang1.15.2-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - /go/pkd/mod
      - run: &build
          name: Build
          command: |
            go generate
            go build
      - run: &test
          name: Test
          command: |
            go test github.com/h3poteto/yadockeri/app/domains/branch
            go test github.com/h3poteto/yadockeri/app/values

  frontend:
    docker:
      - image: node:12.7.0-alpine
    working_directory: /go/src/github.com/h3poteto/yadockeri

    steps:
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ arch }}-node12.7.0-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - vendor-{{ arch }}-node12.7.0-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: |
            yarn install
      - save_cache:
          key: vendor-{{ arch }}-node12.7.0-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: |
            yarn run build

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - frontend

